spring:
  batch.jdbc.initialize-schema: always
  codec.max-in-memory-size: 10MB
  main.web-application-type: none
  kafka.producer:
    client-id: producer-${PRODUCER_ID:0}
    bootstrap-servers: >
      ${KAFKA_BOOTSTRAP_SERVERS:
      localhost:9092,
      localhost:9093,
      localhost:9094}
    key-serializer: org.apache.kafka.common.serialization.StringSerializer
    value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    properties:
      spring.json:
        add.type.headers: true
        type.mapping: >
          user:com.github.marceloleite2604.kafkaenvironment.producer.domain.user.User,
          address:com.github.marceloleite2604.kafkaenvironment.producer.domain.address.Address
  datasource:
    url: jdbc:postgresql://${DATASOURCE_HOST:localhost}:${DATASOURCE_PORT:5432}/${DATASOURCE_DB:kenv}
    username: ${DATASOURCE_USERNAME:scott}
    password: ${DATASOURCE_PASSWORD:}

producer:
  job.steps:
    users-retrieval:
      total-items: ${USERS_RETRIEVAL_TOTAL_ITEMS:5000}
      chunk-size: ${USERS_RETRIEVAL_CHUNK_SIZE:100}
      buffered-items: ${USERS_RETRIEVAL_BUFFERED_ITEMS:250}
      failure-chance-rate: ${USERS_RETRIEVAL_FAILURE_CHANCE_RATE:0.0001}
    addresses-retrieval:
      total-items: ${ADDRESSES_RETRIEVAL_TOTAL_ITEMS:10000}
      chunk-size: ${ADDRESSES_RETRIEVAL_CHUNK_SIZE:200}
      buffered-items: ${ADDRESSES_RETRIEVAL_BUFFERED_ITEMS:400}
      failure-chance-rate: ${ADDRESSES_RETRIEVAL_FAILURE_CHANCE_RATE:0.0001}
  kafka.topics:
    users: ${KAFKA_TOPICS_USERS:users}
    addresses: ${KAFKA_TOPICS_ADDRESSES:addresses}

logging.level:
  root: ${LOGGING_LEVEL_ROOT:INFO}
  io.netty.handler.ssl: DEBUG
  com.github.marceloleite2604.kafkaenvironment.producer: ${LOGGING_LEVEL_APP:DEBUG}