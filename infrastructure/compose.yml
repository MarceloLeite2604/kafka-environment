name: kenv
services:
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    restart: on-failure
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: "Kluster"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-1:29092,kafka-2:29092,kafka-3:29092
      KAFKA_CLUSTERS_0_METRICS_PORT: 5556
 
  zookeeper:
    image: bitnami/zookeeper:3.8
    restart: on-failure
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka-1:
    extends:
      file: compose.template.yml
      service: kafka
    hostname: kafka-1
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_ADVERTISED_LISTENERS: 'DOCKER://:29092,HOST://localhost:9092'
      KAFKA_CFG_BROKER_ID: 1
      KAFKA_CFG_NODE_ID: 1
    env_file:
      - ../.env

  kafka-2:
    extends:
      file: compose.template.yml
      service: kafka
    hostname: kafka-2
    ports:
      - "9093:9092"
    environment:
      KAFKA_CFG_ADVERTISED_LISTENERS: 'DOCKER://:29092,HOST://localhost:9093'
      KAFKA_CFG_BROKER_ID: 2
      KAFKA_CFG_NODE_ID: 2
    env_file:
      - ../.env

  kafka-3:
    extends:
      file: compose.template.yml
      service: kafka
    hostname: kafka-3
    ports:
      - "9094:9092"
    environment:
      KAFKA_CFG_ADVERTISED_LISTENERS: 'DOCKER://:29092,HOST://localhost:9094'
      KAFKA_CFG_BROKER_ID: 3
      KAFKA_CFG_NODE_ID: 3
    env_file:
      - ../.env

  kafka-init-topics:
    image: bitnami/kafka:3.3.1
    restart: on-failure
    volumes:
      - ./kafka-init-topics/create-content.sh:/opt/bitnami/scripts/kafka/create-content.sh
    command: /opt/bitnami/scripts/kafka/create-content.sh

  postgres:
    image: postgres:15.1-alpine
    restart: on-failure
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_DB=kenv
      - POSTGRES_USER=scott

  mongo:
    image: mongo:6.0.3
    ports:
      - "27017:27017"