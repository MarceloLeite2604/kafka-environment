spring:
  main.web-application-type: none
  kafka.consumer:
    client-id: consumer-${CONSUMER_ID:0}
    auto-offset-reset: earliest
    group-id: ${KAFKA_GROUP_ID:consumers}
    bootstrap-servers: >
      ${KAFKA_BOOTSTRAP_SERVERS:
      localhost:9092,
      localhost:9093,
      localhost:9094}
    key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    properties:
      allow.auto.create.topics: ${KAFKA_ALLOW_AUTO_CREATE_TOPICS:false}
      spring.json.type.mapping: >
          user:com.github.marceloleite2604.kafkaenvironment.consumer.domain.user.dto.UserDto,
          address:com.github.marceloleite2604.kafkaenvironment.consumer.domain.address.dto.AddressDto
  data.mongodb.uri: mongodb://${MONGO_HOST:localhost}:${MONGO_PORT:27017}/${MONGO_DB:kenv}

consumer.kafka.topics:
  users: ${KAFKA_TOPICS_USERS:users}
  addresses: ${KAFKA_TOPICS_ADDRESSES:addresses}

logging.level:
  root: ${LOGGING_LEVEL_ROOT:INFO}
  com.github.marceloleite2604.kafkaenvironment.consumer: ${LOGGING_LEVEL_APP:DEBUG}